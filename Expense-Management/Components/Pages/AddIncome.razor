@page "/addIncome"
<div class="container py-4">
    <!-- Header -->
    <div class="w-75 mb-4">
        <h1 class="text-center">Add Income</h1>
    </div>

    <!-- Income Form -->
    <div class="card shadow">
        <div class="card-body">
            <form @onsubmit="HandleSubmit">
                <div class="mb-3">
                    <label for="income-title" class="form-label">
                        Title
                    </label>
                    <input type="text" id="income-title" @bind="IncomeTitle"
                           class="form-control" required />
                </div>

                <div class="mb-3">
                    <label for="income-amount" class="form-label">
                        Amount
                    </label>
                    <input type="number" id="income-amount" @bind="IncomeAmount"
                           class="form-control" required />
                </div>

                <div class="mb-3">
                    <label for="income-date" class="form-label">
                        Date
                    </label>
                    <input type="date" id="income-date" @bind="IncomeDate"
                           class="form-control" required />
                </div>

                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary">
                        Add Income
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    private string IncomeTitle { get; set; } = string.Empty;
    private decimal IncomeAmount { get; set; }
    private DateTime IncomeDate { get; set; } = DateTime.Today;
    private List<Income> Incomes { get; set; } = new();

    [Inject]
    private NavigationManager NavManager { get; set; } = default!;

    private void HandleSubmit()
    {
        if (!string.IsNullOrWhiteSpace(IncomeTitle) && IncomeAmount > 0)
        {
            Incomes.Add(new Income
                {
                    IncomeTitle = IncomeTitle,
                    IncomeAmount = IncomeAmount,
                    IncomeDate = IncomeDate
                });

            SaveIncomeData();
            NavManager.NavigateTo("/home");

            // Reset form fields
            IncomeTitle = string.Empty;
            IncomeAmount = 0;
        }
    }

    private void SaveIncomeData()
    {
        try
        {
            string filePath = Path.Combine(
                Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments),
                "Income.json"
            );

            var data = System.Text.Json.JsonSerializer.Serialize(Incomes);
            File.WriteAllText(filePath, data);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving income data: {ex.Message}");
        }
    }

    private class Income
    {
        public string IncomeTitle { get; set; } = string.Empty;
        public decimal IncomeAmount { get; set; }
        public DateTime IncomeDate { get; set; }
    }
}
